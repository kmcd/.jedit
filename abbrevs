[global]
ast|∗
xi|ξ
Upsilon|Υ
<-|←
female|♀
qed|∎
leftarpoonup|↼
angle|∠
varphi|φ
nillams|∍
swarrow|↙
rightarrow|→
delta|δ
bigtriangleup|∆
propto|∝
wr|≀
succ|≻
hookleftarrow|↪
Delta|Δ
geq|≥
Box|∞
subseteq|⊆
rceil|⎤
nabla|∇
union|∪
Diamond|◇
triangleright|⊳
mangle|∢
nwarrow|↖
beta|β
coprod|∐
notin|∉
bullet|∙
->|→
leftarrow|←
sharp|♯
in|∈
succeq|≽
rfloor|⎦
Downarrow|⇓
male|♂
rho|ρ
Pi|Π
cdot|⋅
doesnotdivide|∤
heartsuit|♡
uparrow|↑
emptyset|∅
forall|∀
rightleftharpoons|⇋
div|∻
rhd|◁
leftrighthaproons|⇌
phi|ϕ
aleph|א
omega|ω
Updownarrow|⇳
upsilon|υ
doteq|≐
perp|⊥
Omega|Ω
int|∫
lhd|▷
approx|≈
notexists|∄
bigcirc|◯
alpha|α
simeq|≃
sqsubseteq|⊑
zeta|ζ 
oint|∮
ss|ß
gg|≫
psi|ψ
OO|Ø
niton|∌
gamma|γ
clubsuit|♣
diamond|◇
OE|Œ
Gamma|Γ
triangleleft|⊲
and|∧
cap|∩
setminus|∖
backslash|\
vee|∨
searrow|↘
bemol|♭
parallel|∥
kappa|κ
frown|⁀
circ|∘
sqcap|⊔
pounds|£
neq|≠
leq|≤
dashv|⊢
neg|¬
AE|Æ
AA|Å
Phi|Φ
Lambda|Λ
nearrow|↗
iota|ι
Xi|Ξ
oslash|⊘
complement|∁
equiv|≡
epsilon|ε
ddag|‡
leadsto|↝
<->|↔
pm|±
downarrow|↓
pi|π
top|⊤
sim|∼
leftharpoondown|↽
lfloor|⎣
otimes|⊗
sangle|∢
leftrightarrow|↔
Psi|Ψ
sun|☼
sum|∑
exists|∃
inter|∩
star|∗
or|∨
bigtriangledown|∇
supseteq|⊇
oo|ø
smile|‿
preceq|≼
smallin|∊
??|¿
rightharpoonup|⇀
mid||
oe|œ
copyright|©
theta|ϴ
cong|≅
Leftarrow|⇐
diamondsuit|♢
mapsto|↦
S|§
tau|τ
Theta|Θ
c->|↪
nu|ν
prec|≺
lceil|⎡
sigma|σ
updownarrow|↕
wedge|∧
spadesuit|♠
notparallel|∦
ni|∋
cup|∪
Sigma|Σ
ominus|⊝
asymp|≍
notsim|≁
odot|⊙
lambda|λ
subset|⊂
surd|√
mu|μ
Rightarrow|⇒
partial|∂
mp|∓
ae|æ
supset|⊃
sqcup|⊔
aa|å
'|&apos;
=>|⇒
chi|χ
rightharpoondown|⇁
sqsubset|⊏
bowtie|⋈
divides|∣
eta|η
hookrightarrow|↩
sqsupset|⊐
increment|∆
dag|†
Uparrow|⇑
ll|≪
prod|∏
<=|⇐
sqsupseteq|⊒
models|⊨
[c++]
[sqr]
[nsis2]
[asp]
[latex]
[factor]
[batch]
[haml]
[assembly-mcs51]
[vrml2]
[groovy]
[relax-ng-compact]
[icon]
[velocity]
[patch]
[beanshell]
[pl1]
[pyrex]
[inno-setup]
[inform]
[netrexx]
[eiffel]
[fortran]
[chill]
[smalltalk]
[idl]
[pvwave]
[ada95]
[pl-sql]
[htaccess]
[apacheconf]
[clojure]
[io]
[pure]
[properties]
[rhtml]
%=|<%= \| %>
%%|<% \| %>
&|&amp;
[textile]
fm|---\ntitle:  \ntags:   \n---
[powerdynamo]
[vhdl]
sl|std_logic
slv|std_logic_vector( x downto y )
var|variable
sig|signal
[maple]
[lotos]
[django]
[ada]
[php]
[yab]
[lua]
[makefile]
[sas]
[rtf]
[ptl]
[gcbasic]
[xsl]
fes|<xsl:for-each select="\|">\n</xsl:for-each>
nc|<xsl:number count="\|"/>
asn|<xsl:attribute-set name="\|">\n</xsl:attribute-set>
sse|<xsl:strip-space elements="\|"/>
cos|<xsl:copy-of select="\|"/>
com|<xsl:comment>\|</xsl:comment>
imh|<xsl:import href="\|"/>
an|<xsl:attribute name="\|"></xsl:attribute>
mt|<xsl:message terminate="\|"></xsl:message>
vns|<xsl:variable name="\|" select=""/>
ai|<xsl:apply-imports/>
ss|<xsl:sort select="\|"/>
pn|<xsl:param name="\|"/>
vn|<xsl:variable name="\|"/>
pse|<xsl:preserve-space elements="\|"/>
cwt|<xsl:choose>\n\t<xsl:when test="\|">\n\t</xsl:when>\n</xsl:choose>
wpn|<xsl:with-param name="\|" select=""/>
it|<xsl:if test="\|">\n</xsl:if>
ctn|<xsl:call-template name="\|"/>
co|<xsl:copy>\|</xsl:copy>
tnm|<xsl:template name="\|" match="">\n</xsl:template>
pin|<xsl:processing-instruction name="\|"></xsl:processing-instruction>
om|<xsl:output method="\|"/>
ats|<xsl:apply-templates select="\|"/>
oe|<xsl:output encoding="\|"/>
atsm|<xsl:apply-templates select="\|" mode=""/>
x|<?xml version="1.0"?>\|
tdoe|<xsl:text disable-output-escaping="\|"></xsl:text>
xe|<?xml vesion="1.0" encoding="\|"?>
t|<xsl:text>\|</xsl:text>
ctnwp|<xsl:call-template name="\|">\n\t<xsl:with-param name="" select=""/>\n</xsl:call-template>
s|<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n\|\n</xsl:stylesheet>
o|<xsl:otherwise>\n\|\n</xsl:otherwise>
cwto|<xsl:choose>\n\t<xsl:when test="\|">\n\t</xsl:when>\n\t<xsl:otherwise>\n\t</xsl:otherwise>\n</xsl:choose>
n|<xsl:number/>
inh|<xsl:include href="\|"/>
m|<xsl:message>\|</xsl:message>
tmm|<xsl:template match="\|" mode="">\n</xsl:template>
k|<xsl:key name="\|" match="" use=""/>
en|<xsl:element name="\|">\n</xsl:element>
vos|<xsl:value-of select="\|"/>
f|<xsl:fallback>\|</xsl:fallback>
tn|<xsl:template name="\|">\n</xsl:template>
tm|<xsl:template match="\|">\n</xsl:template>
[moin]
[bibtex]
[modula3]
[perl]
[tsp]
[transact-sql]
[lisp]
[smi-mib]
[actionscript]
[pop11]
[progress]
[ini]
[html]
th|<th>\|</th>
[sgml]
[bcel]
[psp]
[antlr]
[cmake]
[assembly-m68k]
[omnimark]
[interlis]
[cvs-commit]
[lilypond]
[jsp]
[foxpro]
[rfc]
[tex]
[mail]
[assembly-macro32]
[svn-commit]
[aspect-j]
[squidconf]
[rview]
[jhtml]
[jedit-actions]
[stata_ado]
[embperl]
[mysql]
[rd]
[zpt]
[objective-c]
[mqsc]
[prolog]
[stata_do]
[assembly-r2000]
[sdl/pr]
[hex]
[swig]
[javafx]
[rebol]
[s+]
[dsssl]
[forth]
[nqc]
[tpl]
[s#]
[fhtml]
[occam]
[objectrexx]
[rpm-spec]
[apdl]
[myghty]
[tcl]
[rcp]
[template-toolkit]
[python]
[i4gl]
[clips]
[rest]
[twiki]
[text]
[awk]
[verilog]
[erlang]
[yaml]
[assembly-ags]
[shellscript]
[gettext]
[jcl]
[d]
[c]
[coldfusion]
[b]
[typoscript]
[scheme]
[texinfo]
[assembly-agc]
[user story]
[java]
Il|SwingUtilities.invokeLater(new Runnable()\n{\n\tpublic void run()\n\t{\n\t\t\|\n\t}\n});
ne|nextElement()
W|while($1)\n{\n\t\|\n}
V|Vector
Fd|for(int $1 = $2 - 1; $1 >= 0; $1--)\n{\n\t\|\n}
Fc|for(int $1 = 0; $1 < $2.size(); $1++)\n{\n\t$3 \| = ($3)$2.get($1);\n}
Ie|if($1)\n{\n\t|\n}\nelse\n{\n\t\n}\n
serr|System.err.println(\|);
JE|JEditTextArea
VDE|VFS.DirectoryEntry
S|String
Fa|for(int $1 = 0; $1 < $2.length; $1++)\n{\n\t$3 \| = $2[$1];\n}
P|public
O|Object
N|$1 $2 = new $1(\|);
gta|getTextArea()
gp|jEdit.getProperty(\|)
I|if($1)\n{\n\t\|\n}
H|Hashtable
F|for(int $1 = 0; $1 < $2; $1++)\n{\n\t\|\n}
Br|BufferedReader $1 = new BufferedReader(\|);
E|Exception
D|do\n{\n\t\|\n}\nwhile($1);
sp|jEdit.setProperty(\|);
C|$1 $2 = ($1)\|
Mal|MalformedURLException
B|Buffer
hme|hasMoreElements()
ogs|import org.gjt.sp.
El|else\n{\n\t\|\n}
IO|IOException
gb|getBuffer()
IN|$1 $2 = ($1)$3.next();
Ei|else if($1)\n{\n\t\|\n}
chs|Box.createHorizontalStrut(\|)
Cget|($1)$2.get($3)
sbp|jEdit.setBooleanProperty(\|);
cg|Box.createGlue()
logw|Log.log(Log.WARNING,this,\|);
gip|jEdit.getIntegerProperty(\|)
CtoArray|($1[])$2.toArray(new $1[$2.size()])
logn|Log.log(Log.NOTICE,this,\|);
logm|Log.log(Log.MESSAGE,this,\|);
DMTN|DefaultMutableTreeNode
loge|Log.log(Log.ERROR,this,\|);
logd|Log.log(Log.DEBUG,this,\|);
cvs|Box.createVerticalStrut(\|)
WI|while($1.hasNext())\n{\n\t\|\n}
ogsu|import org.gjt.sp.util.
gbp|jEdit.getBooleanProperty(\|)
sout|System.out.println(\|);
ogsj|import org.gjt.sp.jedit.
[assembly-parrot]
[dot]
[xml]
YY|<$1>\n\|\n</$1>
Ykeycombo|<keycombo><keycap>$1</keycap><keycap>$2</keycap></keycombo>
Ykeycap|<keycap>\|</keycap>
[cil]
[powershell]
[postscript]
[sql-loader]
[redcode]
[renderman-rib]
[literate-haskell]
[doxygen]
[javacc]
[pike]
[ruby]
bfr|before do\n  \|\nend
wip|violated "In progress"
td|# TODO: 
[applescript]
[bbj]
[ml]
[pascal]
[c#]
[freemarker]
[vbscript]
[povray]
[sass]
[jmk]
[icalendar]
[slate]
[shtml]
[haskell]
[hlsl]
[n3]
[cobol]
[csv]
[css]
rb|border: thin solid red;
[assembly-x86]
[binsource-agc]
[uscript]
[gnuplot]
[xq]
[javascript]
td|// TODO: 
